{
  "name": "Create Network - Meraki - REST",
  "tasks": {
    "workflow_start": {
      "name": "workflow_start",
      "groups": [],
      "nodeLocation": {
        "x": -864,
        "y": -108
      },
      "x": 0,
      "y": 0.5
    },
    "workflow_end": {
      "name": "workflow_end",
      "groups": [],
      "nodeLocation": {
        "x": 216,
        "y": -108
      },
      "x": 1,
      "y": 0.5
    },
    "d3a4": {
      "name": "getOrganizations",
      "canvasName": "getOrganizations",
      "summary": "List Organizations",
      "description": "List the organizations that the user has privileges on",
      "location": "Adapter",
      "locationType": "Meraki",
      "app": "Meraki",
      "type": "automatic",
      "displayName": "Meraki",
      "variables": {
        "incoming": {
          "adapter_id": "$var.job.adapterId"
        },
        "outgoing": {
          "result": ""
        }
      },
      "actor": "Pronghorn",
      "groups": [],
      "nodeLocation": {
        "x": -636,
        "y": -108
      }
    },
    "47b4": {
      "name": "createOrganizationNetwork",
      "canvasName": "createOrganizationNetwork",
      "summary": "Create a network",
      "description": "Create a network",
      "location": "Adapter",
      "locationType": "Meraki",
      "app": "Meraki",
      "type": "automatic",
      "displayName": "Meraki",
      "variables": {
        "incoming": {
          "organizationId": "$var.91a0.organizationId",
          "createOrganizationNetwork": "$var.91a0.createNetworkPayload",
          "adapter_id": "$var.job.adapterId"
        },
        "outgoing": {
          "result": "$var.job.createNetworkSuccess"
        },
        "error": "$var.job.createNetworkError"
      },
      "actor": "Pronghorn",
      "groups": [],
      "nodeLocation": {
        "x": -24,
        "y": -108
      }
    },
    "91a0": {
      "name": "transformation",
      "canvasName": "transformation",
      "summary": "Build Create Network Payload - Meraki",
      "description": "Builds payload for creating network in Meraki",
      "location": "Application",
      "locationType": null,
      "app": "WorkFlowEngine",
      "type": "operation",
      "displayName": "WorkFlowEngine",
      "variables": {
        "incoming": {
          "tr_id": "654159c9af3bfb0177c888e9",
          "variableMap": {
            "networkName": "$var.job.networkName",
            "timeZone": "$var.job.timeZone",
            "tags": "$var.job.tags",
            "productTypes": "$var.job.productTypes",
            "notes": "$var.job.notes",
            "listOrganizations": "$var.d3a4.result",
            "organizationName": "$var.job.organizationName"
          },
          "options": {
            "extractOutput": true,
            "validateIncoming": false,
            "revertToDefaultValue": true
          }
        },
        "outgoing": {
          "createNetworkPayload": null,
          "organizationId": null
        },
        "decorators": []
      },
      "actor": "Pronghorn",
      "groups": [],
      "nodeLocation": {
        "x": -336,
        "y": -108
      }
    },
    "925f": {
      "name": "ViewData",
      "canvasName": "ViewData",
      "summary": "View Error",
      "description": "Displays a message and runtime data to an operator. This can be used to request a decision, or used for acknowledgement only.",
      "location": "Application",
      "app": "WorkFlowEngine",
      "displayName": "Tools",
      "type": "manual",
      "variables": {
        "incoming": {
          "header": "Could not create Meraki Network",
          "message": "",
          "body": "$var.47b4.error",
          "variables": "",
          "btn_success": "Retry",
          "btn_failure": "Abort"
        },
        "outgoing": {}
      },
      "view": "/workflow_engine/task/ViewData",
      "groups": [],
      "nodeLocation": {
        "x": -24,
        "y": -204
      }
    }
  },
  "transitions": {
    "workflow_start": {
      "d3a4": {
        "state": "success",
        "type": "standard"
      }
    },
    "workflow_end": {},
    "d3a4": {
      "91a0": {
        "state": "success",
        "type": "standard"
      }
    },
    "47b4": {
      "workflow_end": {
        "state": "success",
        "type": "standard"
      },
      "925f": {
        "type": "standard",
        "state": "error"
      }
    },
    "91a0": {
      "47b4": {
        "state": "success",
        "type": "standard"
      }
    },
    "925f": {
      "workflow_end": {
        "type": "standard",
        "state": "failure"
      },
      "47b4": {
        "state": "success",
        "type": "revert"
      }
    }
  },
  "inputSchema": {
    "type": "object",
    "properties": {
      "adapterId": {
        "type": [
          "array",
          "boolean",
          "null",
          "number",
          "object",
          "string"
        ]
      },
      "networkName": {
        "$id": "networkName",
        "type": "string",
        "examples": [
          "Network Name"
        ]
      },
      "timeZone": {
        "$id": "timeZone",
        "type": "string",
        "examples": [
          "America/New_York"
        ]
      },
      "tags": {
        "$id": "tags",
        "type": "array",
        "items": {
          "type": "string",
          "examples": [
            "tag1"
          ]
        }
      },
      "productTypes": {
        "$id": "productTypes",
        "type": "array",
        "items": {
          "type": "string",
          "examples": [
            "appliance"
          ]
        }
      },
      "notes": {
        "$id": "notes",
        "type": "string",
        "examples": [
          "my optional note"
        ]
      },
      "organizationName": {
        "$id": "organizationName",
        "type": "string",
        "examples": [
          "Itential PreSales"
        ]
      }
    },
    "required": [
      "adapterId",
      "networkName",
      "timeZone",
      "tags",
      "productTypes",
      "notes",
      "organizationName"
    ]
  },
  "outputSchema": {
    "type": "object",
    "properties": {
      "adapterId": {
        "type": [
          "array",
          "boolean",
          "null",
          "number",
          "object",
          "string"
        ]
      },
      "networkName": {
        "$id": "networkName",
        "type": "string",
        "examples": [
          "Network Name"
        ]
      },
      "timeZone": {
        "$id": "timeZone",
        "type": "string",
        "examples": [
          "America/New_York"
        ]
      },
      "tags": {
        "$id": "tags",
        "type": "array",
        "items": {
          "type": "string",
          "examples": [
            "tag1"
          ]
        }
      },
      "productTypes": {
        "$id": "productTypes",
        "type": "array",
        "items": {
          "type": "string",
          "examples": [
            "appliance"
          ]
        }
      },
      "notes": {
        "$id": "notes",
        "type": "string",
        "examples": [
          "my optional note"
        ]
      },
      "organizationName": {
        "$id": "organizationName",
        "type": "string",
        "examples": [
          "Itential PreSales"
        ]
      },
      "_id": {
        "type": "string",
        "pattern": "^[0-9a-f]{24}$"
      },
      "initiator": {
        "type": "string"
      },
      "createNetworkSuccess": {
        "title": "result",
        "type": "object"
      },
      "createNetworkError": {
        "type": [
          "array",
          "boolean",
          "null",
          "number",
          "object",
          "string"
        ]
      }
    }
  },
  "type": "automation",
  "font_size": 12,
  "errorHandler": null,
  "preAutomationTime": 0,
  "sla": 0,
  "last_updated": "2023-12-15T16:34:59.661Z",
  "lastUpdatedVersion": "5.46.0-2023.1.30.0",
  "created": "2023-10-26T16:11:29.674Z",
  "created_by": {
    "provenance": "CloudAAA",
    "username": "mike.elrom@itential.com",
    "firstname": "Michael",
    "inactive": false
  },
  "createdVersion": "5.46.0-2023.1.21.0",
  "last_updated_by": {
    "provenance": "CloudAAA",
    "username": "mike.elrom@itential.com",
    "firstname": "Michael",
    "inactive": false
  },
  "canvasVersion": 3,
  "tags": [],
  "groups": [],
  "migrationVersion": 2
}